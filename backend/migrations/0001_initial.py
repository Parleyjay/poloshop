# Generated by Django 5.2.4 on 2025-09-01 01:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=100, null=True, unique=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'AddressType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='API',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('key', models.CharField(db_column='Key', max_length=500)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'API',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100, unique=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'Brand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('category', models.CharField(db_column='Category', max_length=100)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'CategoryType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=10)),
                ('currency_code', models.CharField(db_column='CurrencyCode', max_length=10, unique=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'Currency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryMode',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100, unique=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'DeliveryMode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralSetup',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('value', models.IntegerField(blank=True, db_column='Value', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=50, null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'GeneralSetup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryActionType',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('code', models.CharField(db_column='Code', max_length=5, unique=True)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'InventoryActionType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('quantity_change', models.IntegerField(db_column='QuantityChange')),
                ('reference_id', models.BigIntegerField(blank=True, db_column='ReferenceId', null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'InventoryTransaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, db_column='Message', null=True)),
                ('subject', models.CharField(blank=True, db_column='Subject', max_length=300, null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'Notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('message', models.TextField(db_column='Message')),
                ('subject', models.CharField(blank=True, db_column='Subject', max_length=200, null=True)),
                ('is_active', models.BooleanField(blank=True, db_column='IsActive', null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'NotificationTemplate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100, unique=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'NotificationType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('changed_date', models.DateTimeField(blank=True, db_column='ChangedDate', null=True)),
                ('changed_by', models.BigIntegerField(blank=True, db_column='ChangedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'OrderStatusHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('method', models.CharField(db_column='Method', max_length=100)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'PaymentMethod',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PickupStation',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('is_warehouse', models.BooleanField(blank=True, db_column='IsWarehouse', null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'PickupStation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=200)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=18)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'Product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDocument',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('file_path', models.CharField(db_column='FilePath', max_length=500)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'ProductDocument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('sku', models.CharField(blank=True, db_column='SKU', max_length=100, null=True, unique=True)),
                ('attributes', models.JSONField(blank=True, db_column='Attributes', null=True)),
                ('price', models.DecimalField(db_column='Price', decimal_places=3, max_digits=18)),
            ],
            options={
                'db_table': 'ProductVariant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('code', models.CharField(db_column='Code', max_length=50, unique=True)),
                ('description', models.CharField(db_column='Description', max_length=255)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'Reason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sender',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('sender_address', models.CharField(db_column='SenderAddress', max_length=255)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'Sender',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('status', models.CharField(db_column='Status', max_length=50)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'Status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=3, max_digits=18, null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'Transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='FirstName', max_length=100)),
                ('last_name', models.CharField(db_column='LastName', max_length=100)),
                ('other_name', models.CharField(blank=True, db_column='OtherName', max_length=100, null=True)),
                ('email', models.EmailField(db_column='Email', max_length=255, unique=True)),
                ('phone_no', models.CharField(blank=True, db_column='PhoneNo', max_length=20, null=True, unique=True)),
                ('password_hash', models.BinaryField(db_column='PasswordHash')),
                ('last_login_date', models.DateTimeField(blank=True, db_column='LastLoginDate', null=True)),
                ('failed_login_attempts', models.IntegerField(db_column='FailedLoginAttempts', default=0)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('status', models.CharField(db_column='Status', max_length=10)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'UserStatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('user_type', models.CharField(db_column='UserType', max_length=50)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
            ],
            options={
                'db_table': 'UserType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'Warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarehouseStock',
            fields=[
                ('id', models.BigAutoField(db_column='Id', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('created_date', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updated_by', models.BigIntegerField(blank=True, db_column='UpdatedBy', null=True)),
            ],
            options={
                'db_table': 'WarehouseStock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('customer', 'Customer'), ('vendor', 'Vendor'), ('staff', 'Staff'), ('admin', 'Admin')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
